import sys
import arff
import numpy as np
from itertools import product
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import cross_val_score, KFold
from sklearn.utils import resample
from sklearn.dummy import DummyClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from scipy.stats import ttest_ind

header = ["{:^123}".format("Nearest Neighbour Results") + '\n' + '-' * 123  + '\n' + \
          "{:^15} | {:^10} | {:^16} | {:^16} | {:^16} | {:^16} | {:^16}" \
          .format("Dataset", "Baseline", "10%", "25%", "50%", "75%", "100%"),
          "{:^123}".format("Decision Tree Results") + '\n' + '-' * 123  + '\n' + \
          "{:^15} | {:^10} | {:^16} | {:^16} | {:^16} | {:^16} | {:^16}" \
          .format("Dataset", "Baseline", "10%", "25%", "50%", "75%", "100%")]


offset = [1, 6]

score_list = [('anneal', [[ 0.23817728,  0.23830212,  0.23827715,  0.23830212,  0.23831461,
         0.23822722,  0.23830212,  0.2382397 ,  0.23833958,  0.23830212],
       [ 0.20138889,  0.19166667,  0.2125    ,  0.20416667,  0.20138889,
         0.20138889,  0.225     ,  0.20138889,  0.19027778,  0.20138889],
       [ 0.16581028,  0.17391304,  0.19150198,  0.16185771,  0.16403162,
         0.18300395,  0.19189723,  0.19209486,  0.20177866,  0.1743083 ],
       [ 0.12474747,  0.10459596,  0.11368687,  0.10469697,  0.11141414,
         0.12020202,  0.10691919,  0.11146465,  0.12459596,  0.10919192],
       [ 0.08773047,  0.09506146,  0.08775241,  0.09062774,  0.08770852,
         0.09352502,  0.09962687,  0.08920105,  0.08933275,  0.090518  ],
       [ 0.08357054,  0.07566792,  0.07122347,  0.07681648,  0.07233458,
         0.0690387 ,  0.07575531,  0.07790262,  0.07353308,  0.06791511],
       [ 0.05555556,  0.09027778,  0.1125    ,  0.08888889,  0.07916667,
         0.07777778,  0.07777778,  0.1125    ,  0.09027778,  0.09027778],
       [ 0.04051383,  0.03992095,  0.0444664 ,  0.02213439,  0.0527668 ,
         0.04525692,  0.0444664 ,  0.04011858,  0.03577075,  0.03992095],
       [ 0.01343434,  0.02449495,  0.00893939,  0.01338384,  0.01111111,
         0.01555556,  0.01777778,  0.01787879,  0.01333333,  0.01333333],
       [ 0.01488147,  0.01035996,  0.01191835,  0.01483758,  0.01483758,
         0.01336699,  0.0178007 ,  0.00891133,  0.01485953,  0.01338894],
       [ 0.00667915,  0.00555556,  0.00558052,  0.0111236 ,  0.00444444,
         0.00666667,  0.00444444,  0.00780275,  0.01      ,  0.00669164]]), ('audiology', [[ 0.74822134,  0.74743083,  0.74762846,  0.74762846,  0.7472332 ,
         0.7486166 ,  0.74703557,  0.74822134,  0.74782609,  0.7472332 ],
       [ 0.61666667,  0.6       ,  0.6       ,  0.56666667,  0.65      ,
         0.58333333,  0.58333333,  0.6       ,  0.6       ,  0.61666667],
       [ 0.45666667,  0.38333333,  0.39      ,  0.42333333,  0.43      ,
         0.41      ,  0.39666667,  0.40666667,  0.45333333,  0.45      ],
       [ 0.30681818,  0.30151515,  0.31742424,  0.30075758,  0.30075758,
         0.3030303 ,  0.36136364,  0.34848485,  0.33787879,  0.30681818],
       [ 0.28897059,  0.28933824,  0.30147059,  0.31286765,  0.27904412,
         0.27867647,  0.33014706,  0.27867647,  0.28345588,  0.31911765],
       [ 0.26936759,  0.30434783,  0.24802372,  0.24328063,  0.25177866,
         0.2527668 ,  0.26620553,  0.26106719,  0.28913043,  0.26126482],
       [ 0.58333333,  0.58333333,  0.63333333,  0.65      ,  0.6       ,
         0.65      ,  0.56666667,  0.66666667,  0.63333333,  0.6       ],
       [ 0.45      ,  0.49333333,  0.41      ,  0.42666667,  0.59333333,
         0.48333333,  0.41      ,  0.48666667,  0.40666667,  0.50333333],
       [ 0.26363636,  0.30151515,  0.33484848,  0.30151515,  0.32878788,
         0.30984848,  0.29469697,  0.26666667,  0.26515152,  0.31742424],
       [ 0.17720588,  0.24889706,  0.19411765,  0.20110294,  0.25477941,
         0.21801471,  0.225     ,  0.21911765,  0.24227941,  0.21838235],
       [ 0.23379447,  0.22608696,  0.23833992,  0.21679842,  0.21225296,
         0.26581028,  0.2256917 ,  0.22549407,  0.25355731,  0.21205534]]), ('autos', [[ 0.67428571,  0.67357143,  0.67452381,  0.67357143,  0.67380952,
         0.67333333,  0.67309524,  0.67309524,  0.67333333,  0.67261905],
       [ 0.65      ,  0.65      ,  0.65      ,  0.6       ,  0.65      ,
         0.65      ,  0.65      ,  0.65      ,  0.65      ,  0.65      ],
       [ 0.59      ,  0.64666667,  0.61      ,  0.58333333,  0.65      ,
         0.63333333,  0.61333333,  0.61333333,  0.59      ,  0.61      ],
       [ 0.66727273,  0.66818182,  0.64181818,  0.66636364,  0.63818182,
         0.68636364,  0.63818182,  0.68636364,  0.67545455,  0.62818182],
       [ 0.53416667,  0.49541667,  0.54708333,  0.53791667,  0.50916667,
         0.53416667,  0.53      ,  0.52791667,  0.58041667,  0.49583333],
       [ 0.5802381 ,  0.57547619,  0.57047619,  0.57142857,  0.57142857,
         0.56595238,  0.555     ,  0.585     ,  0.57071429,  0.59095238],
       [ 0.85      ,  0.7       ,  0.8       ,  0.8       ,  0.7       ,
         0.65      ,  0.7       ,  0.7       ,  0.7       ,  0.85      ],
       [ 0.40666667,  0.50666667,  0.57      ,  0.41666667,  0.59      ,
         0.41      ,  0.38666667,  0.50666667,  0.51      ,  0.47333333],
       [ 0.29272727,  0.33363636,  0.35363636,  0.36545455,  0.33545455,
         0.33272727,  0.39090909,  0.36      ,  0.38090909,  0.28363636],
       [ 0.31958333,  0.28666667,  0.34583333,  0.28083333,  0.31875   ,
         0.26916667,  0.31916667,  0.22875   ,  0.28791667,  0.27583333],
       [ 0.17190476,  0.20952381,  0.24357143,  0.2002381 ,  0.1852381 ,
         0.1997619 ,  0.20547619,  0.195     ,  0.27666667,  0.21      ]]), ('credit-a', [[ 0.44492754,  0.44492754,  0.44492754,  0.44492754,  0.44492754,
         0.44492754,  0.44492754,  0.44492754,  0.44492754,  0.44492754],
       [ 0.39047619,  0.40714286,  0.41428571,  0.39285714,  0.40238095,
         0.40714286,  0.40714286,  0.40714286,  0.39047619,  0.37857143],
       [ 0.41405229,  0.41830065,  0.4127451 ,  0.41862745,  0.40196078,
         0.40718954,  0.41830065,  0.40098039,  0.40653595,  0.43660131],
       [ 0.32260504,  0.30773109,  0.34210084,  0.33243697,  0.31310924,
         0.3197479 ,  0.33310924,  0.31571429,  0.3305042 ,  0.28672269],
       [ 0.35399698,  0.33883861,  0.35995475,  0.34611614,  0.35196078,
         0.34264706,  0.34992459,  0.33842383,  0.33242836,  0.3484917 ],
       [ 0.34637681,  0.33623188,  0.35217391,  0.36086957,  0.34057971,
         0.33913043,  0.35217391,  0.34782609,  0.35362319,  0.34202899],
       [ 0.17619048,  0.21666667,  0.20238095,  0.21428571,  0.17619048,
         0.15714286,  0.20238095,  0.17380952,  0.20238095,  0.18571429],
       [ 0.11633987,  0.11633987,  0.12777778,  0.13333333,  0.15196078,
         0.11568627,  0.12908497,  0.10424837,  0.13921569,  0.14019608],
       [ 0.19134454,  0.18848739,  0.21420168,  0.20571429,  0.1910084 ,
         0.24630252,  0.20588235,  0.17352941,  0.19705882,  0.18226891],
       [ 0.22435897,  0.1974359 ,  0.17586727,  0.18012821,  0.18374811,
         0.18382353,  0.21466817,  0.18736802,  0.19739819,  0.18563348],
       [ 0.1942029 ,  0.1884058 ,  0.2       ,  0.2       ,  0.20869565,
         0.17681159,  0.21014493,  0.19275362,  0.1884058 ,  0.18405797]]), ('hypothyroid', [[ 0.07715254,  0.07714693,  0.07714903,  0.07714202,  0.07714623,
         0.07715465,  0.0771378 ,  0.07714272,  0.07714412,  0.07714693],
       [ 0.07411095,  0.07688478,  0.08207681,  0.08990043,  0.09039829,
         0.07951636,  0.08492176,  0.07951636,  0.08776671,  0.08200569],
       [ 0.07529675,  0.07530795,  0.07638298,  0.07209406,  0.07315789,
         0.07212766,  0.0731467 ,  0.0700112 ,  0.0731355 ,  0.07210526],
       [ 0.04877012,  0.04719408,  0.04823258,  0.04932737,  0.04823821,
         0.04718001,  0.04403918,  0.04613025,  0.04771755,  0.04716593],
       [ 0.04842368,  0.0491329 ,  0.04983836,  0.05125554,  0.05090093,
         0.04879332,  0.04984086,  0.05302108,  0.05054257,  0.0491329 ],
       [ 0.0477229 ,  0.04692364,  0.04771799,  0.04665839,  0.04772501,
         0.04824709,  0.04984632,  0.0487804 ,  0.04904074,  0.04666189],
       [ 0.02674253,  0.0185633 ,  0.02660028,  0.02645804,  0.02660028,
         0.03456615,  0.03698435,  0.02638691,  0.02645804,  0.02916074],
       [ 0.01802912,  0.01167973,  0.01380739,  0.01697648,  0.01905935,
         0.01592385,  0.01801792,  0.01378499,  0.01273236,  0.01486002],
       [ 0.00529945,  0.00635202,  0.00583136,  0.00688675,  0.00635765,
         0.00688956,  0.00636328,  0.00689238,  0.00636609,  0.00583136],
       [ 0.00742676,  0.00671629,  0.00671754,  0.00636418,  0.00777385,
         0.00565496,  0.00848432,  0.00883643,  0.01025111,  0.00636168],
       [ 0.00556748,  0.00582923,  0.00689234,  0.00530223,  0.00715759,
         0.00662849,  0.00556748,  0.00636043,  0.00556748,  0.00556468]]), ('letter', [[ 0.9613    ,  0.96235   ,  0.96325   ,  0.9627    ,  0.96315   ,
         0.96325   ,  0.96205   ,  0.9619    ,  0.96215   ,  0.9638    ],
       [ 0.165     ,  0.173     ,  0.162     ,  0.1725    ,  0.171     ,
         0.171     ,  0.169     ,  0.1645    ,  0.1675    ,  0.17      ],
       [ 0.095     ,  0.0942    ,  0.0958    ,  0.0942    ,  0.0968    ,
         0.0956    ,  0.099     ,  0.0936    ,  0.0998    ,  0.0974    ],
       [ 0.0613    ,  0.0601    ,  0.0609    ,  0.0608    ,  0.0593    ,
         0.0611    ,  0.0604    ,  0.0596    ,  0.062     ,  0.0594    ],
       [ 0.04686667,  0.04773333,  0.04746667,  0.04693333,  0.04713333,
         0.04633333,  0.04686667,  0.04813333,  0.04713333,  0.04606667],
       [ 0.03955   ,  0.039     ,  0.03905   ,  0.03965   ,  0.0394    ,
         0.0382    ,  0.03795   ,  0.03945   ,  0.04025   ,  0.0402    ],
       [ 0.2845    ,  0.2855    ,  0.292     ,  0.286     ,  0.286     ,
         0.294     ,  0.291     ,  0.2905    ,  0.286     ,  0.284     ],
       [ 0.2084    ,  0.2276    ,  0.2198    ,  0.2152    ,  0.2136    ,
         0.2146    ,  0.2158    ,  0.2216    ,  0.2106    ,  0.2098    ],
       [ 0.1652    ,  0.1632    ,  0.1604    ,  0.165     ,  0.1652    ,
         0.1686    ,  0.166     ,  0.1622    ,  0.1624    ,  0.1663    ],
       [ 0.1318    ,  0.13146667,  0.13246667,  0.1332    ,  0.13333333,
         0.1352    ,  0.1322    ,  0.1328    ,  0.1334    ,  0.1356    ],
       [ 0.1177    ,  0.11825   ,  0.1199    ,  0.11875   ,  0.1183    ,
         0.1135    ,  0.11705   ,  0.11885   ,  0.11875   ,  0.11865   ]]), ('microarray', [[ 0.48902597,  0.48948052,  0.48922078,  0.51785714,  0.51282468,
         0.51279221,  0.51422078,  0.51626623,  0.48928571,  0.48912338],
       [ 0.61      ,  0.54333333,  0.6       ,  0.57      ,  0.6       ,
         0.62      ,  0.62333333,  0.61666667,  0.56333333,  0.6       ],
       [ 0.5032967 ,  0.46703297,  0.51813187,  0.48956044,  0.4532967 ,
         0.53241758,  0.49615385,  0.5032967 ,  0.47582418,  0.51923077],
       [ 0.41441799,  0.42804233,  0.42791005,  0.43201058,  0.43121693,
         0.41997354,  0.42089947,  0.42037037,  0.43915344,  0.41058201],
       [ 0.50574913,  0.51347271,  0.48426249,  0.50342625,  0.50598142,
         0.50133566,  0.51747967,  0.52015099,  0.51074332,  0.5087108 ],
       [ 0.51042208,  0.51814935,  0.49675325,  0.5088961 ,  0.50551948,
         0.50720779,  0.51633117,  0.50522727,  0.51431818,  0.50558442],
       [ 0.45666667,  0.51333333,  0.48666667,  0.60666667,  0.53666667,
         0.49333333,  0.48333333,  0.46      ,  0.46666667,  0.56333333],
       [ 0.51703297,  0.52582418,  0.48956044,  0.48956044,  0.51703297,
         0.51813187,  0.56153846,  0.51098901,  0.51153846,  0.58406593],
       [ 0.5542328 ,  0.4962963 ,  0.53968254,  0.51097884,  0.49219577,
         0.49986772,  0.51018519,  0.52142857,  0.51402116,  0.5037037 ],
       [ 0.45592334,  0.4728223 ,  0.44599303,  0.43885017,  0.47711963,
         0.44860627,  0.4771777 ,  0.48222997,  0.45551684,  0.48437863],
       [ 0.48418831,  0.47295455,  0.51262987,  0.50214286,  0.48162338,
         0.48724026,  0.4800974 ,  0.50350649,  0.46428571,  0.49824675]]), ('vote', [[ 0.38615222,  0.38588795,  0.38678647,  0.38646934,  0.3859408 ,
         0.38657505,  0.38636364,  0.38615222,  0.38636364,  0.38615222],
       [ 0.075     ,  0.065     ,  0.07      ,  0.065     ,  0.07      ,
         0.07      ,  0.045     ,  0.045     ,  0.07      ,  0.07      ],
       [ 0.11909091,  0.10909091,  0.11090909,  0.11181818,  0.11090909,
         0.10090909,  0.08272727,  0.10181818,  0.08363636,  0.11090909],
       [ 0.08290043,  0.07337662,  0.08354978,  0.08311688,  0.07857143,
         0.08311688,  0.0961039 ,  0.08354978,  0.08290043,  0.07900433],
       [ 0.07083333,  0.07045455,  0.07054924,  0.07026515,  0.07045455,
         0.07083333,  0.07689394,  0.07083333,  0.07111742,  0.07026515],
       [ 0.07811839,  0.08255814,  0.07838266,  0.07832981,  0.07362579,
         0.08255814,  0.07827696,  0.07817125,  0.08736786,  0.0737315 ],
       [ 0.16      ,  0.16      ,  0.145     ,  0.115     ,  0.1       ,
         0.085     ,  0.185     ,  0.125     ,  0.135     ,  0.185     ],
       [ 0.07272727,  0.06545455,  0.04636364,  0.03818182,  0.06545455,
         0.06454545,  0.07272727,  0.03636364,  0.05454545,  0.04545455],
       [ 0.08290043,  0.05995671,  0.06883117,  0.07835498,  0.0508658 ,
         0.06515152,  0.05562771,  0.08225108,  0.06904762,  0.07813853],
       [ 0.03068182,  0.02774621,  0.03399621,  0.03967803,  0.03077652,
         0.03058712,  0.03087121,  0.03977273,  0.03049242,  0.03683712],
       [ 0.05528541,  0.06649049,  0.05544397,  0.06654334,  0.05523256,
         0.06427061,  0.06432347,  0.05073996,  0.05047569,  0.06189218]])]


file_nb = 8
NN_er10 = 0
NN_er100 = 0

DT_er10 = 0
DT_er100 = 0

for k in range(2):
    print(header[k])
    for i in range(8):
        scores = score_list[i][1]
        p_value = [None] * 5
        for j in range(5):
            _, p_value[j] = ttest_ind(scores[0], scores[j + offset[k]], equal_var = False)



        print("{:<15} | {:>10.2%}".format(score_list[i][0], np.mean(scores[0])), end = '')
        
        for j in range(5):
            print(" | {:>6.2%} ({:>5.2%}) {}" .format(np.mean(scores[j + offset[k]]),
                                                      np.std(scores[j + offset[k]]),
                                                      '*' if p_value[j] < 0.05 else ' '), end = '')


            if(j == 0 and k == 0):

                NN_er10 += (np.mean(scores[0]) - np.mean(scores[j + offset[k]])) / np.mean(scores[j + offset[k]])

            elif(j == 4 and k == 0):
                NN_er100 += (np.mean(scores[0]) - np.mean(scores[j + offset[k]])) / np.mean(scores[j + offset[k]])

            elif(j == 0 and k == 1):
                DT_er10 += (np.mean(scores[0]) - np.mean(scores[j + offset[k]])) / np.mean(scores[j + offset[k]])

            elif(j == 4 and k == 1):
                DT_er100 += (np.mean(scores[0]) - np.mean(scores[j + offset[k]])) / np.mean(scores[j + offset[k]])
            
        print()
        
    print()




print(NN_er10 / 8)
print(NN_er100 / 8)
print(DT_er10 / 8)
print(DT_er100 / 8)
##calculate mean error reduction relative to default



